plugins {
	id 'maven-publish'
	id 'org.quiltmc.loom' version '0.12.+'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	// Jitpack
	maven { url 'https://jitpack.io' }

	// Player Pronouns
	maven {
		name = "NucleoidMC"
		url = uri("https://maven.nucleoid.xyz/")
	}

	// Fabric Tailor
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }

	// Origins
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
}

dependencies {
	// // Base // //
	minecraft libs.minecraft
	mappings loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:v2")
	}
	modImplementation libs.ql
	modImplementation libs.qsl

	// // Compat // //

	// Drogtor
	modCompileOnly files('/build/libs/drogtor-1.1.3+1.17.jar')
	modLocalRuntime files('/build/libs/drogtor-1.1.3+1.17.jar')

	// // Fabric Tailor
	modCompileOnly libs.fabrictailor
	modLocalRuntime libs.fabrictailor

	// Origins
	modCompileOnly libs.qfapi
	modLocalRuntime libs.qfapi
	modCompileOnly files('/build/libs/Calio-1.18.2-1.6.0.jar') // Fix quilt incompatibility
	modLocalRuntime files('/build/libs/Calio-1.18.2-1.6.0.jar') // Fix quilt incompatibility
	modCompileOnly (libs.origins) {
		exclude module: 'calio'
	}
	modLocalRuntime (libs.origins) {
		exclude module: 'calio'
	}

	// Player Pronouns
	modCompileOnly files('/build/libs/player-pronouns-1.6.0+1.18.jar')
	modLocalRuntime files('/build/libs/player-pronouns-1.6.0+1.18.jar')
	modLocalRuntime "eu.pb4:placeholder-api:1.1.3+1.17.1"
	modLocalRuntime files('/build/libs/more-codecs-0.2.2+1.18.jar')

	// Cardinal Components
	modCompileOnly libs.cardinal
	modCompileOnly libs.cardinalEntity
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

jar {
	from("LICENSE.txt") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}
